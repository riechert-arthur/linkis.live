# Starts a backend Go server.

services:
  rest:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-rest
    ports:
      - 8080:8080
    volumes:
      - ./services/rest:/service
    environment:
      - PORT=8080
      - REDIS_ADDR=redis:6379
    depends_on:
      - redis
      - mysql

  client:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-client
    ports:
      - 5173:5173
    volumes:
      - ./client:/client
      - client-node-modules:/client/node_modules
    depends_on:
      - rest
    environment:
      - VITE_REST_URL=http://localhost:8080

  client-test:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-client
    command: npm test -- --watch
    volumes:
      - ./client:/client
      - client-node-modules:/client/node_modules 
    working_dir: /client
    environment:
      - NODE_ENV=test
      - VITE_REST_URL=http://rest:8080
    depends_on:
      - rest

  redis:
    image: redis:8.0-rc1-alpine
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data

  mysql:
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=linkislive
    ports:
      - 3306:3306
    volumes:
      - mysql-data:/var/lib/mysql
      - ./services/db/init/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-uroot", "-p123456"]
      interval: 1m30s
      timeout: 30s
      retries: 5
  
  mysql-test:
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=linkislive-test
    volumes:
      - ./services/db/init/:/docker-entrypoint-initdb.d
      - ./services/db/tests:/tests
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-uroot", "-p123456"]
      interval: 1m30s
      timeout: 30s
      retries: 5

  mysql-test-runner:
    image: mysql:latest
    depends_on:
      mysql-test:
        condition: service_healthy
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - TEST_DB=linkislive-test
    volumes:
      - ./services/db/tests:/tests
    entrypoint: ["/bin/sh", "-c", "chmod +x /tests/run-tests.sh && /tests/run-tests.sh"]


volumes:
  redis-data:
  mysql-data:
  client-node-modules:
